[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "foundation_voice"
version = "0.1.0"
authors = [
    { name="Aniket-think41" }
]
description = "Core package for Open Source CAI Pipecat - foundation voice"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["ai", "pipecat", "open-source", "foundation-voice"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

# Core dependencies required for the SDK to run in any configuration
dependencies = [
    "fastapi>=0.115.6",
    "loguru>=0.7.0",
    "mcp",
    "pipecat-ai>=0.0.71", # Core pipecat library with version
    "pipecat-ai[silero]>=0.0.71", # Core pipecat library with version
    "pydantic-ai[logfire]>=0.0.51",
    "python-dotenv>=1.0.1",
    "ruff>=0.8.6",
    "uvicorn>=0.30.6",
    "websockets>=13.0.1",
    "opentelemetry-exporter-otlp-proto-grpc>=1.25.0", # For OTLP gRPC tracing
]

[project.optional-dependencies]
# Provider-specific extras. Users can install what they need.
# e.g., pip install .[openai,deepgram]

openai = ["pipecat-ai[openai]>=0.0.71"]

openai-agents = ["openai-agents>=0.0.12"]

deepgram = ["pipecat-ai[deepgram]>=0.0.71"]

cartesia = ["pipecat-ai[cartesia]>=0.0.71"]

daily = ["pipecat-ai[daily]>=0.0.71"]

webrtc = ["pipecat-ai[webrtc]>=0.0.71", "pipecat-ai-small-webrtc-prebuilt>=0.5.0"]

smallestai = ["smallestai>=3.1.0"]

twilio = ["twilio"]

groq = ["pipecat-ai[groq]>=0.0.71"]

elevenlabs = ["pipecat-ai[elevenlabs]>=0.0.71"]

# A convenience extra to install everything, useful for development
all = [
    "foundation_voice[openai-agents]",
    "foundation_voice[openai]",
    "foundation_voice[deepgram]",
    "foundation_voice[cartesia]",
    "foundation_voice[daily]",
    "foundation_voice[webrtc]",
    "foundation_voice[smallestai]",
    "foundation_voice[twilio]",
    "foundation_voice[groq]",
    "foundation_voice[elevenlabs]",
]

dev = [
    "python-semantic-release",
    "commitizen",
]


[project.urls]
"Homepage" = "https://github.com/think41/foundation-voice.git"

[project.scripts]
"foundation-voice-cli" = "foundation_voice.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["foundation_voice*"]
exclude = ["examples*"]


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version"
]
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version",
]
branch = "main"
changelog_file = "CHANGELOG.md"
build_command = "pip install build && python -m build"
dist_path = "dist/"
upload_to_pypi = true
upload_to_release = true
commit_author = "semantic-release <semantic-release@example.com>"
commit_message = "chore(release): {version} [skip ci]\\n\\n{changelog}"